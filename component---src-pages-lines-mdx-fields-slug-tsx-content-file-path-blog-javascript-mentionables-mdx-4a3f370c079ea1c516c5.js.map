{"version":3,"file":"component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-javascript-mentionables-mdx-4a3f370c079ea1c516c5.js","mappings":"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","sources":["webpack://steebe.dev/./src/pages/lines/lines.module.css","webpack://steebe.dev/./blog/javascript-mentionables.mdx","webpack://steebe.dev/./src/pages/lines/{mdx.fields__slug}.tsx","webpack://steebe.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var date = \"lines-module--date--99f4f\";\nexport var post = \"lines-module--post--c3f31\";\nexport var previewContainer = \"lines-module--preview-container--8a704\";\nexport var threeColumn = \"lines-module--three-column--f948c\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    em: \"em\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Concepts\"), \"\\n\", React.createElement(_components.h2, null, \"Short-circuit Evaluation\"), \"\\n\", React.createElement(_components.p, null, \"In any line that evaluates multiple conditions, JS does its best to short-\\ncircuit what needs to be evaluated.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-JavaScript\"\n  }, \"// LHS is evaluated and returned as true (RHS ignored)\\nconsole.log(\\\"me\\\" || \\\"you\\\");\\n\\n// 1st condition evaluated as false yields third condition evaluation & return\\n// (returns true due to two true expressions \\\"you\\\" and \\\"you\\\")\\nconsole.log(0 ? (\\\"me || me\\\") : (\\\"you\\\" && \\\"you\\\"))\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Automatic Type Conversion (Via Type Coercion)\"), \"\\n\", React.createElement(_components.p, null, \"JS does its best to allow any types to be compared and returned. Its interpreter\\nperforms \", React.createElement(_components.em, null, \"type coercion\"), \" on the values it is \\\"confused\\\" about.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-JavaScript\"\n  }, \"console.log(8 * null);  // converts null to 0, returns 0\\nconsole.log(\\\"5\\\" - 1);   // converts \\\"5\\\" to 5, returns 4\\nconsole.log(\\\"5\\\" + 1);   // converts 1 to \\\"1\\\", returns \\\"51\\\"\\nconsole.log(\\\"five\\\" * 2);// cannot perform conversion on \\\"five\\\", returns NaN\\n\")), \"\\n\", React.createElement(_components.p, null, \"Note that the type coercion being performed is heavily dependent on the\\n\", React.createElement(_components.em, null, \"operation\"), \"; The values being evaluated and converted are secondary in\\ncomparison.\"), \"\\n\", React.createElement(_components.h2, null, \"Variables & Data Binding\"), \"\\n\", React.createElement(_components.p, null, \"There are three keywords that represent assigning a value to a variable:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"var\"), \" - allows for defining a global variable. When \", React.createElement(_components.em, null, \"var\"), \" is used in the context of a local block, the associated variable can be accessed outside said block.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"let\"), \" - introduced in ES2015. Allows for defining a local variable whose scope is exactly the block it belongs to.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"const\"), \" - when used in assignment, behaves like \", React.createElement(_components.em, null, \"final\"), \" in Java. The associated variables behave just like variables defined with \", React.createElement(_components.em, null, \"let\"), \", only they cannot be modified at all in the future.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/steebe.github.io/steebe.github.io/blog/javascript-mentionables.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport {post, date} from \"./lines.module.css\";\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: date\n  }, React.createElement(\"i\", null, data.mdx.frontmatter.date), React.createElement(\"br\", null), data.mdx.frontmatter.updated && React.createElement(\"i\", null, \"(Updated on \", data.mdx.frontmatter.updated, \")\")), React.createElement(\"div\", {\n    className: post\n  }, children));\n};\nconst query = \"2624043382\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["date","post","_createMdxContent","props","_components","Object","assign","h1","h2","p","pre","code","em","ol","li","_provideComponents","components","React","className","wrapper","MDXLayout","Post","_ref","data","children","Layout","mdx","frontmatter","updated","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}