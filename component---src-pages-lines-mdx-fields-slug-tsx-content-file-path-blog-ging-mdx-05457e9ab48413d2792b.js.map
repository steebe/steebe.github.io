{"version":3,"file":"component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-ging-mdx-05457e9ab48413d2792b.js","mappings":"kLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,WAAY,KAAMQ,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,KAAMO,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,0BAA2B,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,6BAA8B,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,uBAAwB,MAAO,KAAMM,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,YAAa,KAAMK,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,KAAMO,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,qCAAwCM,EAAAA,cAAoBX,EAAYO,GAAI,KAAM,sDAAuD,6BAA8B,MAAO,KAAMI,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,KAAMG,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,sKAA2K,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,+QAAgR,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,0XAA6X,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,uSAAwS,MAAO,KAAMM,EAAAA,cAAoBX,EAAYI,GAAI,CACzkEQ,MAAO,KACN,KAAMD,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,+EAAkFM,EAAAA,cAAoBX,EAAYO,GAAI,KAAM,sDAAuD,6BAA8B,MAAO,KAAMI,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,KAAMG,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,uRAAwR,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,4SAA+S,MAAO,KAAMM,EAAAA,cAAoBX,EAAYI,GAAI,CACjhCQ,MAAO,KACN,KAAMD,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,2EAA8EM,EAAAA,cAAoBX,EAAYO,GAAI,KAAM,sDAAuD,6BAA8B,MAAO,KAAMI,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,KAAMG,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,2QAA4Q,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,6QAA8Q,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,yJAA4J,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,wIAA0I,KAAMM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,wMAAyM,MACljD,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCjBA,MAAMgB,EAAOC,IACX,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAOL,EAAAA,cAAoBQ,EAAAA,EAAQ,KAAMR,EAAAA,cAAoB,IAAK,CAChES,UAAWC,EAAAA,IACVV,EAAAA,cAAoB,IAAK,KAAMM,EAAKK,IAAIC,YAAYF,MAAOV,EAAAA,cAAoB,KAAM,MAAOM,EAAKK,IAAIC,YAAYC,SAAWb,EAAAA,cAAoB,IAAK,KAAM,eAAgBM,EAAKK,IAAIC,YAAYC,QAAS,MAAOb,EAAAA,cAAoB,MAAO,CAC5OS,UAAWK,EAAAA,IACVP,KAIU,SAASQ,EAAiB3B,GACvC,OAAOY,EAAAA,cAAoBI,EAAMhB,EAAOY,EAAAA,cAAoBgB,EAAqB5B,GACnF,C,gFCfO,IAAIsB,EAAO,4BACPI,EAAO,2B,sEC+BX,MAAMG,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBnB,GAC/B,MAAMoB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAflB,EACFA,EAAWoB,GAGb,IAAIA,KAAsBpB,IAChC,CAACoB,EAAmBpB,GACzB,C","sources":["webpack://steebe.dev/./blog/ging.mdx","webpack://steebe.dev/./src/pages/lines/{mdx.fields__slug}.tsx","webpack://steebe.dev/./src/pages/lines/lines.module.css","webpack://steebe.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ol: \"ol\",\n    li: \"li\",\n    h2: \"h2\",\n    em: \"em\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Preface\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Why am I doing this..?\"), \"\\n\", React.createElement(_components.li, null, \"What makes it reasonable?\"), \"\\n\", React.createElement(_components.li, null, \"Why write about it?\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Children\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Chapter two, \\\"Religion Kills\\\", of \", React.createElement(_components.em, null, \"God is Not Great - How Religion Poisons Everything\"), \" by Christopher Hitchens.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\\"It [religion] may speak about the bliss of the next world, but it wants power in this one.\\\", \\\"The true believer cannot rest until the whole world bows the knee.\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Sectarianism is a major theme in this chapter. Hitchens wants to make it clear that the rivalries created by sects is the first step that religion takes to start its killing process. Sects breed their own toxic subculture to propagate nothing but anti-other ideology.\"), \"\\n\", React.createElement(_components.li, null, \"Many personal experiences were used to back up his claims in this chapter, and digesting each of them was crucial to tying the chapter together. There were a few moments where I felt as though he was enjoying simply sharing his wealth of experience during his research phases, but ultimately the stories all added up to become a powerful tool at summing up \\\"Religion Kills\\\".\"), \"\\n\", React.createElement(_components.li, null, \"My opinion that religion was first and foremost, and remains to be, a tool used on and against lesser privileged or less educated peoples was solidified by this chapter. Ideology seems the perfect distractor and unifier that can be leveraged by those who wish to maintain power over a group.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Chapter three, \\\"A Short Digression on the Pig; or, Why Heaven Hates Ham\\\" of \", React.createElement(_components.em, null, \"God is Not Great - How Religion Poisons Everything\"), \" by Christopher Hitchens.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Hitchens here goes on a brief four and a half page tangent on the nature of religion's relationship with pigs. Mostly, he talks about the history of how humanity sees the pig, and as usual spouts his opinions on the religious groups that condemn their consumption or imagery.\"), \"\\n\", React.createElement(_components.li, null, \"It surprised me to learn that charcuterie platters are likely originated in Spain, where religious refugees from the Middle East were given escape. Refugees were forced to convert to Christianity and pork and cured hams were used as \\\"torture\\\" to tell whether or not a refugee was fully converted.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Chapter four, \\\"A Note on Health, to Which Religion Can Be Hazardous\\\" of \", React.createElement(_components.em, null, \"God is Not Great - How Religion Poisons Everything\"), \" by Christopher Hitchens.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Stemming the idea of sexual repression - isn't it likely that religion's growth or survival is due to most of the population not knowing how to deal with their children's behavior appropriately? This, tied with lack of education, obviously seems fairly plausible.\"), \"\\n\", React.createElement(_components.li, null, \"\\\"Archbishop Lancelot Andrewes, during the celebrated 'Black Death' in London in 1665, noticed uneasily that the horror fell upon those who prayed and kept the faith  as well as upon those who did not. He came perilously close to stumbling upon a real point.\\\" (48)\"), \"\\n\", React.createElement(_components.li, null, \"\\\"But if these things [evil doings] can be preached under the protection of an established religion, we are expected to take them at face value.\\\" (53)\"), \"\\n\", React.createElement(_components.li, null, \"\\\"...[religion] claims the right to officiate at the end of life, just as it hopes to monopolize children at life's beginning.\\\" (60)\"), \"\\n\", React.createElement(_components.li, null, \"Here, Hitchens breaks down how religion always seems to have an answer to things, regardless of what science has to say and conveniently when the answer aids in covering up things evil or complex.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/steebe.github.io/steebe.github.io/blog/ging.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport {post, date} from \"./lines.module.css\";\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: date\n  }, React.createElement(\"i\", null, data.mdx.frontmatter.date), React.createElement(\"br\", null), data.mdx.frontmatter.updated && React.createElement(\"i\", null, \"(Updated on \", data.mdx.frontmatter.updated, \")\")), React.createElement(\"div\", {\n    className: post\n  }, children));\n};\nconst query = \"2624043382\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var date = \"lines-module--date--99f4f\";\nexport var post = \"lines-module--post--c3f31\";\nexport var previewContainer = \"lines-module--preview-container--8a704\";\nexport var threeColumn = \"lines-module--three-column--f948c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ol","li","h2","em","ul","_provideComponents","components","React","start","wrapper","MDXLayout","Post","_ref","data","children","Layout","className","date","mdx","frontmatter","updated","post","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}