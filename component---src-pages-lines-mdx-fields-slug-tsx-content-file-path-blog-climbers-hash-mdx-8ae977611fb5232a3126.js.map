{"version":3,"file":"component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-climbers-hash-mdx-8ae977611fb5232a3126.js","mappings":"kLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,8BAA+BS,EAAAA,cAAoBZ,EAAYI,EAAG,CAC1JS,KAAM,+DACL,aAAc,knBAAmnB,KAAMD,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,wRAAyR,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,+HAAgI,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,UAAW,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,kBAAmB,KAAMO,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,8IAA+I,KAAMS,EAAAA,cAAoBZ,EAAYM,WAAY,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,MAAO,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,0IAA2I,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,gBAAiB,KAAMS,EAAAA,cAAoBZ,EAAYM,WAAY,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,wCAAyC,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,gEAAiE,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,6CAA8C,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,uCAAwC,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,oDAAqD,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYM,WAAY,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iCAAkC,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,2EAA4E,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,6DAA8D,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,gFAAiF,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,oDAAqD,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYM,WAAY,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,UAAW,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,6EAA8E,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,wCAAyC,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,gEAAiE,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,2BAA4B,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,kCAAmC,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,QAAS,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,UAAW,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,sBAAuB,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+BAAgC,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,4BAA6B,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,mbAAob,KAAMS,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+DAAgE,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,sFAAuF,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+IAAgJ,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,aAAc,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,4EAA6E,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+CAAgD,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+BAAgC,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,kJACpgL,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBChBA,MAAMiB,EAAOC,IACX,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAOL,EAAAA,cAAoBQ,EAAAA,EAAQ,KAAMR,EAAAA,cAAoB,IAAK,CAChES,UAAWC,EAAAA,IACVV,EAAAA,cAAoB,IAAK,KAAMM,EAAKK,IAAIC,YAAYF,MAAOV,EAAAA,cAAoB,KAAM,MAAOM,EAAKK,IAAIC,YAAYC,SAAWb,EAAAA,cAAoB,IAAK,KAAM,eAAgBM,EAAKK,IAAIC,YAAYC,QAAS,MAAOb,EAAAA,cAAoB,MAAO,CAC5OS,UAAWK,EAAAA,IACVP,KAIU,SAASQ,EAAiB5B,GACvC,OAAOa,EAAAA,cAAoBI,EAAMjB,EAAOa,EAAAA,cAAoBgB,EAAqB7B,GACnF,C,gFCfO,IAAIuB,EAAO,4BACPI,EAAO,2B,sEC+BX,MAAMG,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBnB,GAC/B,MAAMoB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAflB,EACFA,EAAWoB,GAGb,IAAIA,KAAsBpB,IAChC,CAACoB,EAAmBpB,GACzB,C","sources":["webpack://steebe.dev/./blog/climbers-hash.mdx","webpack://steebe.dev/./src/pages/lines/{mdx.fields__slug}.tsx","webpack://steebe.dev/./src/pages/lines/lines.module.css","webpack://steebe.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"During my first viewing of \", React.createElement(_components.a, {\n    href: \"https://play.google.com/store/movies/details?id=lqvbkPjQG-U\"\n  }, \"Free Solo\"), \", the 2018 film about the approach to (and execution of) Alex Honnold's ascent of El Capitan sans equipment, I was humbly reminded of the reason I got into climbing. Honnold's initial attempt resulted in him bailing fairly early on in his climb. While I'm sure there were a few factors that went into this decision, the movie really hammered home the idea that he was giving up because he wasn't ready mentally; Honnold seemed to understand he wasn't executing this particular free solo for the right reasons, the first time around. This made me reflect on why I fell in love with the sport of climbing in the first place.\"), \"\\n\", React.createElement(_components.p, null, \"I personally haven't experienced many other activities that challenge the human spirit in the way that climbing does. Watching Honnold's tenacity in training and oneness with the faces he tackled helped validate the feelings I had when I first began obsessing over bouldering.\"), \"\\n\", React.createElement(_components.p, null, \"Of all his inspirational qualities, though, the one that resonated the strongest was: eating four ingredients out of a pan.\"), \"\\n\", React.createElement(_components.p, null, \"Enter:\"), \"\\n\", React.createElement(_components.h1, null, \"Climber's Hash\"), \"\\n\", React.createElement(_components.p, null, \"Here lies an email sent to a buddy of mine with the perfect recipe for climbers who appreciate pain beyond pulley injuries and tendonitis.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"J,\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Below is my recipe for my climber’s hash. It’s pretty picante, so keep your wits about you and substitute the peppers where necessary.\"), \"\\n\", React.createElement(_components.p, null, \"Ingredients:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"(Numbers are for small/large batch.)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"5-10 small red potatoes // sliced length-wise in 1/8” slices\"), \"\\n\", React.createElement(_components.li, null, \"5-10 cloves of garlic // chopped (medium)\"), \"\\n\", React.createElement(_components.li, null, \"1-2 sweet onion // chopped (medium)\"), \"\\n\", React.createElement(_components.li, null, \"2-4 carrots // sliced length-wise in 1/8” slices\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Peppers:\\n(The Morning After)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"1 red fresno // halved length-wise and sliced in 1/16” slices // seeded\"), \"\\n\", React.createElement(_components.li, null, \"2 serrano // sliced length-wise in 1/16” slices // seeded\"), \"\\n\", React.createElement(_components.li, null, \"3 green finger hot // sliced length-wise in 1/16” slices // keep seeds & wax\"), \"\\n\", React.createElement(_components.li, null, \"3 habanero // diced (medium) // keep seeds & wax\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"(Mild)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"1 hungarian // halved length-wise and chopped (medium) // keep ~1/2 seeds\"), \"\\n\", React.createElement(_components.li, null, \"1 bell // chopped (medium) // seeded\"), \"\\n\", React.createElement(_components.li, null, \"1-2 heavy handfuls of fresh baby spinach // chopped (medium)\"), \"\\n\", React.createElement(_components.li, null, \"1-2 can(s) butter beans\"), \"\\n\", React.createElement(_components.li, null, \"1-2 tablespoons of coconut oil\"), \"\\n\", React.createElement(_components.li, null, \"Salt\"), \"\\n\", React.createElement(_components.li, null, \"Pepper\"), \"\\n\", React.createElement(_components.li, null, \"Crushed red pepper\"), \"\\n\", React.createElement(_components.li, null, \"2+ tablespoons chili powder\"), \"\\n\", React.createElement(_components.li, null, \"2+ tablespoons cumin\"), \"\\n\", React.createElement(_components.li, null, \"1 teaspoon garlic powder\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Directions:\\n(Preface: the assumption here is that you’ve cooked before, and/or understand the laws of thermodynamics. Watch the pan & stir fairly regularly during and in-between steps. Furthermore, be sure to wash your hands after dealing with the peppers included in The Morning After variant of the recipe. Under no circumstances should any nose-picking, eye-rubbing or private-part-touching occur until this has been achieved.)\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Heat the coconut oil in a large skillet on medium-high heat\"), \"\\n\", React.createElement(_components.li, null, \"Add potatoes & carrots, lightly season with salt and pepper after a minute on heat\"), \"\\n\", React.createElement(_components.li, null, \"Once potatoes & carrots begin browning and softening, add onion, a bit more salt, garlic powder, and a heavy sprinkle of crushed red pepper\"), \"\\n\", React.createElement(_components.li, null, \"Add beans\"), \"\\n\", React.createElement(_components.li, null, \"Once beans begin browning, add peppers & garlic, cumin, and chili powder\"), \"\\n\", React.createElement(_components.li, null, \"Cook for 3-4 minutes\"), \"\\n\", React.createElement(_components.li, null, \"Reduce heat to low and stir in baby spinach\"), \"\\n\", React.createElement(_components.li, null, \"Remove from heat, and enjoy\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Corollary: enjoy this meal “Honnold-style” by simply eating it out of the pan you’ve cooked with and whatever utensil you’ve used for stirring\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/steebe.github.io/steebe.github.io/blog/climbers-hash.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport {post, date} from \"./lines.module.css\";\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: date\n  }, React.createElement(\"i\", null, data.mdx.frontmatter.date), React.createElement(\"br\", null), data.mdx.frontmatter.updated && React.createElement(\"i\", null, \"(Updated on \", data.mdx.frontmatter.updated, \")\")), React.createElement(\"div\", {\n    className: post\n  }, children));\n};\nconst query = \"2624043382\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var date = \"lines-module--date--99f4f\";\nexport var post = \"lines-module--post--c3f31\";\nexport var previewContainer = \"lines-module--preview-container--8a704\";\nexport var threeColumn = \"lines-module--three-column--f948c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h1","blockquote","ul","li","ol","_provideComponents","components","React","href","wrapper","MDXLayout","Post","_ref","data","children","Layout","className","date","mdx","frontmatter","updated","post","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}