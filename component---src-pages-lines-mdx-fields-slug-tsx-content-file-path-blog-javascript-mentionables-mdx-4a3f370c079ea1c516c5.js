"use strict";(self.webpackChunksteebe_dev=self.webpackChunksteebe_dev||[]).push([[536],{5999:function(e,n,t){t.d(n,{bE:function(){return a},p6:function(){return l}});var l="lines-module--date--99f4f",a="lines-module--post--c3f31"},6357:function(e,n,t){t.r(n),t.d(n,{default:function(){return u}});var l=t(8453),a=t(6540);function o(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",em:"em",ol:"ol",li:"li"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"Concepts"),"\n",a.createElement(n.h2,null,"Short-circuit Evaluation"),"\n",a.createElement(n.p,null,"In any line that evaluates multiple conditions, JS does its best to short-\ncircuit what needs to be evaluated."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-JavaScript"},'// LHS is evaluated and returned as true (RHS ignored)\nconsole.log("me" || "you");\n\n// 1st condition evaluated as false yields third condition evaluation & return\n// (returns true due to two true expressions "you" and "you")\nconsole.log(0 ? ("me || me") : ("you" && "you"))\n')),"\n",a.createElement(n.h2,null,"Automatic Type Conversion (Via Type Coercion)"),"\n",a.createElement(n.p,null,"JS does its best to allow any types to be compared and returned. Its interpreter\nperforms ",a.createElement(n.em,null,"type coercion"),' on the values it is "confused" about.'),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-JavaScript"},'console.log(8 * null);  // converts null to 0, returns 0\nconsole.log("5" - 1);   // converts "5" to 5, returns 4\nconsole.log("5" + 1);   // converts 1 to "1", returns "51"\nconsole.log("five" * 2);// cannot perform conversion on "five", returns NaN\n')),"\n",a.createElement(n.p,null,"Note that the type coercion being performed is heavily dependent on the\n",a.createElement(n.em,null,"operation"),"; The values being evaluated and converted are secondary in\ncomparison."),"\n",a.createElement(n.h2,null,"Variables & Data Binding"),"\n",a.createElement(n.p,null,"There are three keywords that represent assigning a value to a variable:"),"\n",a.createElement(n.ol,null,"\n",a.createElement(n.li,null,a.createElement(n.em,null,"var")," - allows for defining a global variable. When ",a.createElement(n.em,null,"var")," is used in the context of a local block, the associated variable can be accessed outside said block."),"\n",a.createElement(n.li,null,a.createElement(n.em,null,"let")," - introduced in ES2015. Allows for defining a local variable whose scope is exactly the block it belongs to."),"\n",a.createElement(n.li,null,a.createElement(n.em,null,"const")," - when used in assignment, behaves like ",a.createElement(n.em,null,"final")," in Java. The associated variables behave just like variables defined with ",a.createElement(n.em,null,"let"),", only they cannot be modified at all in the future."),"\n"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.RP)(),e.components);return n?a.createElement(n,e,a.createElement(o,e)):o(e)},c=t(1633),s=t(5999);const i=e=>{let{data:n,children:t}=e;return a.createElement(c.A,null,a.createElement("p",{className:s.p6},a.createElement("i",null,n.mdx.frontmatter.date),a.createElement("br",null),n.mdx.frontmatter.updated&&a.createElement("i",null,"(Updated on ",n.mdx.frontmatter.updated,")")),a.createElement("div",{className:s.bE},t))};function u(e){return a.createElement(i,e,a.createElement(r,e))}},8453:function(e,n,t){t.d(n,{RP:function(){return o}});var l=t(6540);const a=l.createContext({});function o(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);
//# sourceMappingURL=component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-javascript-mentionables-mdx-4a3f370c079ea1c516c5.js.map