{"version":3,"file":"component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-go-mentionables-mdx-333f2d050f63e734502c.js","mappings":"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","sources":["webpack://steebe.dev/./blog/go-mentionables.mdx","webpack://steebe.dev/./src/pages/lines/{mdx.fields__slug}.tsx","webpack://steebe.dev/./src/pages/lines/lines.module.css","webpack://steebe.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h3: \"h3\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Go\"), \"\\n\", React.createElement(_components.p, null, \"Go, the prodigal brainchild of various engineers, community enthusiasts (Gophers) and brilliant language/compiler developers, is perhaps Google's best contribution to the Computer Science field.\"), \"\\n\", React.createElement(_components.h3, null, \"Important Packages\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"os\"), \" - contains the go code available for interacting with the operating system hosting a go executable\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"os\"), \".\", React.createElement(_components.strong, null, \"Args\"), \" - a slice of strings that represent the command line arguments passed into a Go application's runtime environment\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Lingo\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"slice\"), \" - a dynamically sized sequence of array elements. Individual elements\\ncan be accessed as\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"mySlice[i]\\n\")), \"\\n\", React.createElement(_components.p, null, \"...chunks can be accessed as\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"mySlice[m:n]\\n\")), \"\\n\", React.createElement(_components.p, null, \"...and the length is reported with\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"len(mySlice)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Conventions\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"zero values\"), \" - any variable that's not defined in its declaration takes what's called a \\\"zero value\\\"\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"string\"), \" --> \\\"\\\" (empty string)\"), \"\\n\", React.createElement(_components.li, null, \"numeric types --> 0\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \":=\"), \" - the \\\"short variable declaration\\\" is the operator used in a statement to declare one or more variables and give them appropriate types based on the initializer value\\n\", React.createElement(_components.code, null, \"gox := 2 // initializes x to 2\")), \"\\n\", React.createElement(_components.h2, null, \"Updating Go\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ sudo rm -rf /usr/local/go\\n# Download latest tar from distribution (https://golang.org/dl/)\\n$ sudo tar -C /usr/local -xzf <path-to-tarball>\\n# Edit GOROOT, GOPATH and PATH\\n$ echo $PATH | grep \\\"/usr/local/go/bin\\\"\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Sources\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/nikhita/432436d570b89cab172dcf2894465753\"\n  }, \"Nikhita\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/steebe.github.io/steebe.github.io/blog/go-mentionables.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport {post, date} from \"./lines.module.css\";\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: date\n  }, React.createElement(\"i\", null, data.mdx.frontmatter.date), React.createElement(\"br\", null), data.mdx.frontmatter.updated && React.createElement(\"i\", null, \"(Updated on \", data.mdx.frontmatter.updated, \")\")), React.createElement(\"div\", {\n    className: post\n  }, children));\n};\nconst query = \"2624043382\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var date = \"lines-module--date--99f4f\";\nexport var post = \"lines-module--post--c3f31\";\nexport var previewContainer = \"lines-module--preview-container--8a704\";\nexport var threeColumn = \"lines-module--three-column--f948c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h3","em","ul","li","strong","pre","code","h2","ol","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","Post","_ref","data","children","Layout","date","mdx","frontmatter","updated","post","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}