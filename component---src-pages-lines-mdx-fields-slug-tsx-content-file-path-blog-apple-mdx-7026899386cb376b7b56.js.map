{"version":3,"file":"component---src-pages-lines-mdx-fields-slug-tsx-content-file-path-blog-apple-mdx-7026899386cb376b7b56.js","mappings":"iLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,WAAY,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,6MAA8M,KAAMI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,yBAA0B,KAAMG,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,wYAAyY,KAAMI,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,4KACv5B,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCVA,MAAMY,EAAOC,IACX,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAOJ,EAAAA,cAAoBO,EAAAA,EAAQ,KAAMP,EAAAA,cAAoB,IAAK,CAChEQ,UAAWC,EAAAA,IACVT,EAAAA,cAAoB,IAAK,KAAMK,EAAKK,IAAIC,YAAYF,MAAOT,EAAAA,cAAoB,KAAM,MAAOK,EAAKK,IAAIC,YAAYC,SAAWZ,EAAAA,cAAoB,IAAK,KAAM,eAAgBK,EAAKK,IAAIC,YAAYC,QAAS,MAAOZ,EAAAA,cAAoB,MAAO,CAC5OQ,UAAWK,EAAAA,IACVP,KAIU,SAASQ,EAAiBvB,GACvC,OAAOS,EAAAA,cAAoBG,EAAMZ,EAAOS,EAAAA,cAAoBe,EAAqBxB,GACnF,C,gFCfO,IAAIkB,EAAO,4BACPI,EAAO,2B,sEC+BX,MAAMG,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlB,GAC/B,MAAMmB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfjB,EACFA,EAAWmB,GAGb,IAAIA,KAAsBnB,IAChC,CAACmB,EAAmBnB,GACzB,C","sources":["webpack://steebe.dev/./blog/apple.mdx","webpack://steebe.dev/./src/pages/lines/{mdx.fields__slug}.tsx","webpack://steebe.dev/./src/pages/lines/lines.module.css","webpack://steebe.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Preface\"), \"\\n\", React.createElement(_components.p, null, \"I am an Apple Bitch. I bought into the Apple ecosystem the second I purchased my first Macbook Air in 2011. I'm a sucker for beautiful design, a tasteful user experience and an obvious edge in quality.\"), \"\\n\", React.createElement(_components.h2, null, \"Apple's Optimal Trick\"), \"\\n\", React.createElement(_components.p, null, \"Aside from planned obsolescense, Apple seems to have a few other methods of keeping an artificial demand for its products present. Artificial is perhaps the wrong word here; The demand is real, it's just the methods in which it's fabricated that are a bit... fishy. The only other method I'd like to call to attention is their ability to recycle features that have already hit production.\"), \"\\n\", React.createElement(_components.p, null, \"My favorite example of this concept is the lack of features that the first iteration of Airpods shipped with, versus what the second iteration of Earpods shippe with...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/steebe.github.io/steebe.github.io/blog/apple.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport {post, date} from \"./lines.module.css\";\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: date\n  }, React.createElement(\"i\", null, data.mdx.frontmatter.date), React.createElement(\"br\", null), data.mdx.frontmatter.updated && React.createElement(\"i\", null, \"(Updated on \", data.mdx.frontmatter.updated, \")\")), React.createElement(\"div\", {\n    className: post\n  }, children));\n};\nconst query = \"2624043382\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var date = \"lines-module--date--99f4f\";\nexport var post = \"lines-module--post--c3f31\";\nexport var previewContainer = \"lines-module--preview-container--8a704\";\nexport var threeColumn = \"lines-module--three-column--f948c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","_provideComponents","components","React","wrapper","MDXLayout","Post","_ref","data","children","Layout","className","date","mdx","frontmatter","updated","post","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}